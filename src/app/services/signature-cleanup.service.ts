import { Injectable } from '@angular/core';
import { SupabaseSignatureService } from './supabase-signature.service';

@Injectable({ providedIn: 'root' })
export class SignatureCleanupService {
  
  constructor(private supabaseSignatureService: SupabaseSignatureService) {}

  /**
   * Elimina una firma del storage cuando se elimine una entrega
   * @param firmaUrl URL de la firma a eliminar
   */
  async cleanupSignatureOnDeliveryDelete(firmaUrl: string): Promise<void> {
    if (!firmaUrl || firmaUrl === 'MIGRATED_FROM_BASE64') return;
    
    try {
      await this.supabaseSignatureService.deleteSignature(firmaUrl);
      console.log('‚úÖ Firma eliminada del storage exitosamente');
    } catch (error) {
      console.warn('‚ö†Ô∏è Error eliminando firma del storage:', error);
      // No lanzar error para no bloquear la eliminaci√≥n de la entrega
    }
  }

  /**
   * M√©todo para limpiar firmas hu√©rfanas (uso administrativo)
   * Este m√©todo puede ser llamado peri√≥dicamente para limpiar archivos hu√©rfanos
   */
  async cleanupOrphanedSignatures(): Promise<{ cleaned: number; errors: number }> {
    console.log('üßπ Iniciando limpieza de firmas hu√©rfanas...');
    // Implementar l√≥gica para encontrar y eliminar firmas hu√©rfanas
    // Por ahora, retornamos un placeholder
    return { cleaned: 0, errors: 0 };
  }
}
